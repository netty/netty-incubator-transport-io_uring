FROM centos:7.9.2009

ARG gcc_version=10.2-2020.11
ENV GCC_VERSION $gcc_version
ENV MAVEN_VERSION 3.9.1
ENV SOURCE_DIR /root/source

# Install requirements
RUN yum install -y \
	apr-devel \
	autoconf \
	automake \
	git \
	glibc-devel \
	libaio-devel \
	libtool \
	lksctp-tools \
	make \
	openssl-devel \
	redhat-lsb-core \
	tar \
	unzip \
	wget \
	zip

# Downloading and installing SDKMAN!
RUN curl -s "https://get.sdkman.io" | bash

ARG java_version="8.0.322-zulu"
ENV JAVA_VERSION $java_version

# Installing Java removing some unnecessary SDKMAN files
RUN bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && \
    yes | sdk install java $JAVA_VERSION && \
    yes | sdk install maven $MAVEN_VERSION && \
    rm -rf $HOME/.sdkman/archives/* && \
    rm -rf $HOME/.sdkman/tmp/*"

RUN echo 'export JAVA_HOME="/root/.sdkman/candidates/java/current"' >> ~/.bashrc
RUN echo 'PATH=/root/.sdkman/candidates/java/current/bin:$PATH' >> ~/.bashrc

RUN mkdir $SOURCE_DIR
WORKDIR $SOURCE_DIR

# Install aarch64 gcc 10.2 toolchain
RUN wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \
   tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \
   mv gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu /opt/
ENV PATH="/opt/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}"

# Prepare our own build
ENV PATH /root/.sdkman/candidates/maven/current:$PATH
ENV JAVA_HOME /root/.sdkman/candidates/java/current/


# Cleanup
RUN rm -rf $SOURCE_DIR
RUN yum clean all && \
    rm -rf /var/cache/yum