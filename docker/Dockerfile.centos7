FROM centos:7.9.2009

ARG gcc_version=10.2-2020.11
ENV GCC_VERSION $gcc_version

ENV SOURCE_DIR /root/source

# Install requirements
RUN yum install -y \
	apr-devel \
	autoconf \
	automake \
	git \
	glibc-devel \
	libaio-devel \
	libtool \
	lksctp-tools \
	make \
	openssl-devel \
	redhat-lsb-core \
	tar \
	wget


ARG java_version=1.8
ENV JAVA_VERSION $java_version
# installing java with jabba
RUN curl -sL https://github.com/shyiko/jabba/raw/master/install.sh | JABBA_COMMAND="install $JAVA_VERSION -o /jdk" bash
RUN echo 'export JAVA_HOME="/jdk"' >> ~/.bashrc
RUN echo 'PATH=/jdk/bin:$PATH' >> ~/.bashrc

WORKDIR /opt

# Install aarch64 gcc 10.2 toolchain
RUN wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \
   tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz
ENV PATH="/opt/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}"

# Install maven
RUN curl https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xz
RUN echo 'PATH=/opt/apache-maven-3.6.3/bin/:$PATH' >> ~/.bashrc

# Prepare our own build
ENV PATH /opt/apache-maven-3.6.3/bin/:$PATH
ENV JAVA_HOME /jdk/

COPY ./pom.xml $SOURCE_DIR/pom.xml
WORKDIR $SOURCE_DIR
RUN /bin/bash -c 'source $HOME/.bashrc && mvn -Plinux-aarch64 dependency:go-offline checkstyle:check surefire:test -ntp'
